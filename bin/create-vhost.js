var exec        = require('child_process').exec;
var fs          = require('fs');
var inquirer    = require('inquirer');
var path        = require('path');

var validations = require('./validations');
var utils       = require('./utils');

function createVhost(cb){
  this.vhostFile = './.vhost';

  this.vhostString = 
    "#generated by vhost\n" +
    "<VirtualHost *:80>\n" +
    "  ServerAdmin juanpablocs21@gmail.com\n" +
    "  ServerName {{domain}}\n" +
    "  DocumentRoot {{path}}\n" +
    "  <Directory {{path}}/>\n" +
    "      SetEnv APPLICATION_ENV development\n" +
    "      Options Indexes FollowSymLinks MultiViews\n" +
    "      AllowOverride all\n" +
    "      Order allow,deny\n" +
    "      allow from all\n" +
    "      Require all granted\n" +
    "  </Directory>\n" +
    "  ErrorLog ${APACHE_LOG_DIR}/{{domain}}-error.log\n" +
    "  CustomLog ${APACHE_LOG_DIR}/{{domain}}-access.log combined\n" +
    "</VirtualHost>";
    

  this.questions = [{
    type: "input",
    name: "nameDomain",
    message: "Add domain",
    validate: validations.domain
    },{
    type: "input",
    name:"namePath",
    message:"Absolute path of project",
    default: path.resolve("."),
    validate: validations.path
    }
  ];

  (function(self, cb){
    inquirer.prompt(self.questions, function(res){
      try {
        // var str = fs.readFileSync(self.vhostFile)
        var str = self.vhostString
                    .toString()
                    .replace(/\{\{domain\}\}/g, res.nameDomain)
                    .replace(/\{\{path\}\}/g, res.namePath);

        var apache2_site  = "/etc/apache2/sites-available/";
        var conf_site     = res.nameDomain + ".conf";
        var to            = apache2_site + conf_site;

        var commands      = {};
            commands.a2ensite = "cd /etc/apache2/sites-enabled && ln -s " + to;
            commands.hosts    = 'echo "127.0.0.1  '+res.nameDomain+'" >> /etc/hosts';
            commands.restart  = 'service apache2 restart';

        try{
          fs.writeFileSync(to, str);
          exec(commands.a2ensite, function(err, out, code) {
            if (err instanceof Error)
              throw err;
            utils.message(commands.a2ensite);

            exec(commands.hosts, function(err, out){
              if(err instanceof Error)
                throw err;
              utils.message(commands.hosts);
            });

            exec(commands.restart, function(err){
              if(err instanceof Error)
                throw err;
              utils.message(commands.restart);
            });

          });

        } catch(err){
          return cb(err);
        }

      } catch (err) {
        return cb(err);
      }

    });

  })(this, cb);
  
}


module.exports = createVhost;